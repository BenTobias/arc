<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>capturableScopes</key>
	<array>
		<string>Pascal</string>
	</array>
	<key>fileTypes</key>
	<array>
		<string>pas</string>
		<string>p</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\b(?i:(function|package|procedure|try|type))\b</string>
	<key>foldingStopMarker</key>
	<string>\b(?i:(end))\b</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Pascal</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>keyword</string>
				<string>keyword.control</string>
				<string>keyword.control.pascal</string>
			</array>
			<key>match</key>
			<string>\b(?i:(absolute|abstract|all|and|and_then|array|as|asm|attribute|begin|bindable|case|class|const|constructor|destructor|div|do|do|else|end|except|export|exports|external|far|file|finalization|finally|for|forward|goto|if|implementation|import|in|inherited|initialization|interface|interrupt|is|label|library|mod|module|name|near|nil|not|object|of|only|operator|or|or_else|otherwise|packed|pow|private|program|property|protected|public|published|qualified|record|repeat|resident|restricted|segment|set|shl|shr|then|to|try|type|unit|until|uses|value|var|view|virtual|while|with|xor))\b</string>
			<key>name</key>
			<string>keyword.control.pascal</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>meta</string>
				<string>meta.function</string>
				<string>meta.function.prototype</string>
				<string>meta.function.prototype.pascal</string>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>storage</string>
						<string>storage.type</string>
						<string>storage.type.prototype</string>
						<string>storage.type.prototype.pascal</string>
					</array>
					<key>name</key>
					<string>storage.type.prototype.pascal</string>
				</dict>
				<key>2</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>entity</string>
						<string>entity.name</string>
						<string>entity.name.function</string>
						<string>entity.name.function.prototype</string>
						<string>entity.name.function.prototype.pascal</string>
					</array>
					<key>name</key>
					<string>entity.name.function.prototype.pascal</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(?i:(function|procedure))\b\s+(\w+(\.\w+)?)(\(.*?\))?;\s*(?=(?i:attribute|forward|external))</string>
			<key>name</key>
			<string>meta.function.prototype.pascal</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>meta</string>
				<string>meta.function</string>
				<string>meta.function.pascal</string>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>storage</string>
						<string>storage.type</string>
						<string>storage.type.function</string>
						<string>storage.type.function.pascal</string>
					</array>
					<key>name</key>
					<string>storage.type.function.pascal</string>
				</dict>
				<key>2</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>entity</string>
						<string>entity.name</string>
						<string>entity.name.function</string>
						<string>entity.name.function.pascal</string>
					</array>
					<key>name</key>
					<string>entity.name.function.pascal</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(?i:(function|procedure))\b\s+(\w+(\.\w+)?)</string>
			<key>name</key>
			<string>meta.function.pascal</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>constant</string>
				<string>constant.numeric</string>
				<string>constant.numeric.pascal</string>
			</array>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
			<key>name</key>
			<string>constant.numeric.pascal</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.line</string>
				<string>comment.line.double-dash</string>
				<string>comment.line.double-dash.pascal</string>
				<string>comment.line.double-dash.pascal.one</string>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.pascal</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(--).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-dash.pascal.one</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.line</string>
				<string>comment.line.double-slash</string>
				<string>comment.line.double-slash.pascal</string>
				<string>comment.line.double-slash.pascal.two</string>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.pascal</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.pascal.two</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(\*</string>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.block</string>
				<string>comment.block.pascal</string>
				<string>comment.block.pascal.one</string>
			</array>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.pascal</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*\)</string>
			<key>name</key>
			<string>comment.block.pascal.one</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.block</string>
				<string>comment.block.pascal</string>
				<string>comment.block.pascal.two</string>
			</array>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.pascal</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>comment.block.pascal.two</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&quot;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.begin</string>
						<string>punctuation.definition.string.begin.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.begin.pascal</string>
				</dict>
			</dict>
			<key>capturableScopes</key>
			<array>
				<string>string</string>
				<string>string.quoted</string>
				<string>string.quoted.double</string>
				<string>string.quoted.double.pascal</string>
			</array>
			<key>comment</key>
			<string>Double quoted strings are an extension and (generally) support C-style escape sequences.</string>
			<key>end</key>
			<string>&quot;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.end</string>
						<string>punctuation.definition.string.end.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.end.pascal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.pascal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>constant</string>
						<string>constant.character</string>
						<string>constant.character.escape</string>
						<string>constant.character.escape.pascal</string>
					</array>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.pascal</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.begin</string>
						<string>punctuation.definition.string.begin.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.begin.pascal</string>
				</dict>
			</dict>
			<key>capturableScopes</key>
			<array>
				<string>string</string>
				<string>string.quoted</string>
				<string>string.quoted.single</string>
				<string>string.quoted.single.pascal</string>
			</array>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.end</string>
						<string>punctuation.definition.string.end.pascal</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.end.pascal</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.pascal</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>constant</string>
						<string>constant.character</string>
						<string>constant.character.escape</string>
						<string>constant.character.escape.apostrophe</string>
						<string>constant.character.escape.apostrophe.pascal</string>
					</array>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.apostrophe.pascal</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.pascal</string>
	<key>uuid</key>
	<string>F42FA544-6B1C-11D9-9517-000D93589AF6</string>
</dict>
</plist>

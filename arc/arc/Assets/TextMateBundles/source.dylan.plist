<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>capturableScopes</key>
	<array>
		<string>Dylan</string>
	</array>
	<key>fileTypes</key>
	<array>
		<string>dylan</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\b(define|begin|block)\b</string>
	<key>foldingStopMarker</key>
	<string>\bend\b</string>
	<key>keyEquivalent</key>
	<string>^~D</string>
	<key>name</key>
	<string>Dylan</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.block</string>
				<string>comment.block.dylan</string>
			</array>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.dylan</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.dylan</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>TODO -- Dylan allows nested comments.</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.dylan</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>//</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.dylan</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.dylan</string>
				</dict>
			</dict>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.line</string>
				<string>comment.line.double-slash</string>
				<string>comment.line.double-slash.dylan</string>
			</array>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.dylan</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.separator</string>
						<string>punctuation.separator.continuation</string>
						<string>punctuation.separator.continuation.dylan</string>
					</array>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.dylan</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(define\s+)((?:sealed|inline)\s)?(method|function)\s+([A-Za-z0-9\\-]*[!?]?)\s</string>
			<key>capturableScopes</key>
			<array>
				<string>meta</string>
				<string>meta.function</string>
				<string>meta.function.dylan</string>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>keyword</string>
						<string>keyword.control</string>
						<string>keyword.control.def</string>
						<string>keyword.control.def.dylan</string>
					</array>
					<key>name</key>
					<string>keyword.control.def.dylan</string>
				</dict>
				<key>2</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>storage</string>
						<string>storage.modifier</string>
						<string>storage.modifier.dylan</string>
					</array>
					<key>name</key>
					<string>storage.modifier.dylan</string>
				</dict>
				<key>3</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>storage</string>
						<string>storage.type</string>
						<string>storage.type.function</string>
						<string>storage.type.function.dylan</string>
					</array>
					<key>name</key>
					<string>storage.type.function.dylan</string>
				</dict>
				<key>4</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>entity</string>
						<string>entity.name</string>
						<string>entity.name.function</string>
						<string>entity.name.function.dylan</string>
					</array>
					<key>name</key>
					<string>entity.name.function.dylan</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.function.dylan</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>keyword</string>
				<string>keyword.control</string>
				<string>keyword.control.dylan</string>
			</array>
			<key>match</key>
			<string>\b(?&lt;!-)(begin|block|case|class|constant|define|domain|else|end|for|function|handler|if|inline|let|library|local|macro|method|module|otherwise|select|unless|until|variable|when|while)(?![:-])\b</string>
			<key>name</key>
			<string>keyword.control.dylan</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>support</string>
				<string>support.constant</string>
				<string>support.constant.language</string>
				<string>support.constant.language.dylan</string>
			</array>
			<key>match</key>
			<string>(#t|#f|#next|#rest|#key|#all-keys|#include)</string>
			<key>name</key>
			<string>support.constant.language.dylan</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>keyword</string>
				<string>keyword.control</string>
				<string>keyword.control.sealing-directives</string>
				<string>keyword.control.sealing-directives.dylan</string>
			</array>
			<key>match</key>
			<string>\b(sealed|open|abstract|concrete|primary|free)\b</string>
			<key>name</key>
			<string>keyword.control.sealing-directives.dylan</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>constant</string>
				<string>constant.numeric</string>
				<string>constant.numeric.dylan</string>
			</array>
			<key>match</key>
			<string>\b((#x[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
			<key>name</key>
			<string>constant.numeric.dylan</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&quot;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.begin</string>
						<string>punctuation.definition.string.begin.dylan</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.begin.dylan</string>
				</dict>
			</dict>
			<key>capturableScopes</key>
			<array>
				<string>string</string>
				<string>string.quoted</string>
				<string>string.quoted.double</string>
				<string>string.quoted.double.dylan</string>
			</array>
			<key>end</key>
			<string>&quot;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.end</string>
						<string>punctuation.definition.string.end.dylan</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.end.dylan</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.dylan</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>constant</string>
						<string>constant.character</string>
						<string>constant.character.escape</string>
						<string>constant.character.escape.dylan</string>
					</array>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.dylan</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>support</string>
				<string>support.class</string>
				<string>support.class.dylan</string>
			</array>
			<key>match</key>
			<string>&lt;(abort|array|boolean|byte-string|character|class|collection|complex|condition|deque|double-float|empty-list|error|explicit-key-collection|extended-float|float|function|generic-function|integer|list|method|mutable-collection|mutable-explicit-key-collection|mutable-sequence|number|object-table|object|pair|range|rational|real|restart|sealed-object-error|sequence|serious-condition|simple-error|simple-object-vector|simple-restart|simple-vector|simple-warning|single-float|singleton|stretchy-collection|stretchy-vector|string|symbol|table|type-error|type|unicode-string|vector|warning)&gt;</string>
			<key>name</key>
			<string>support.class.dylan</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>support</string>
				<string>support.function</string>
				<string>support.function.dylan</string>
			</array>
			<key>match</key>
			<string>\b(?&lt;!-)(abort|abs|add|add!|add-method|add-new|add-new!|all-superclasses|always|any?|applicable-method?|apply|aref|aref-setter|as|as-lowercase|as-lowercase!|as-uppercase|as-uppercase!|ash|backward-iteration-protocol|break|ceiling|ceiling/|cerror|check-type|choose|choose-by|complement|compose|concatenate|concatenate-as|condition-format-arguments|condition-format-string|conjoin|copy-sequence|curry|default-handler|dimension|dimensions|direct-subclasses|direct-superclasses|disjoin|do|do-handlers|element|element-setter|empty?|error|even?|every?|fill!|find-key|find-method|first|first-setter|floor|floor/|forward-iteration-protocol|function-arguments|function-return-values|function-specializers|gcd|generic-function-mandatory-|keywords|generic-function-methods|head|head-setter|identity|initialize|instance?|integral?|intersection|key-sequence|key-test|last|last-setter|lcm|limited|list|logand|logbit?|logior|lognot|logxor|make|map|map-as|map-into|max|member?|merge-hash-codes|min|modulo|negative|negative?|object-class|object-hash|odd?|pair|pop|pop-last|positive?|push|push-last|range|rank|rcurry|reduce|reduce1|remainder|remove|remove!|remove-duplicates|remove-duplicates!|remove-key!|remove-method|replace-elements!|replace-subsequence!|restart-query|return-allowed?|return-description|return-query|reverse|reverse!|round|round/|row-major-index|second|second-setter|shallow-copy|signal|singleton|size|size-setter|slot-initialized?|sort|sort!|sorted-applicable-methods|subsequence-position|subtype?|table-protocol|tail|tail-setter|third|third-setter|truncate|truncate/|type-error-expected-type|type-error-value|type-for-copy|type-union|union|values|vector|zero?)(?![:-])\b</string>
			<key>name</key>
			<string>support.function.dylan</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.dylan</string>
	<key>uuid</key>
	<string>475B8369-3520-4B4C-BBA1-1D1229C6F397</string>
</dict>
</plist>

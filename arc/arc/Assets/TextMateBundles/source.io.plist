<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>capturableScopes</key>
	<array>
		<string>Io</string>
	</array>
	<key>fileTypes</key>
	<array>
		<string>io</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(/\*\*|\([^\)]*$|if\()</string>
	<key>foldingStopMarker</key>
	<string>(\*\*/|^\s*\))</string>
	<key>keyEquivalent</key>
	<string>^~I</string>
	<key>name</key>
	<string>Io</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>meta</string>
						<string>meta.empty-parenthesis</string>
						<string>meta.empty-parenthesis.io</string>
					</array>
					<key>name</key>
					<string>meta.empty-parenthesis.io</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>we match this to overload return inside () --Allan; scoping rules for what gets the scope have changed, so we now group the ) instead of the ( -- Rob</string>
			<key>match</key>
			<string>\((\))</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>meta</string>
						<string>meta.comma-parenthesis</string>
						<string>meta.comma-parenthesis.io</string>
					</array>
					<key>name</key>
					<string>meta.comma-parenthesis.io</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>We want to do the same for ,) -- Seckar; same as above -- Rob</string>
			<key>match</key>
			<string>\,(\))</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>keyword</string>
				<string>keyword.control</string>
				<string>keyword.control.io</string>
			</array>
			<key>match</key>
			<string>\b(if|ifTrue|ifFalse|ifTrueIfFalse|for|loop|reverseForeach|foreach|map|continue|break|while|do|return)\b</string>
			<key>name</key>
			<string>keyword.control.io</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.block</string>
				<string>comment.block.io</string>
			</array>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.io</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.io</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.line</string>
				<string>comment.line.double-slash</string>
				<string>comment.line.double-slash.io</string>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.io</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.io</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>comment</string>
				<string>comment.line</string>
				<string>comment.line.number-sign</string>
				<string>comment.line.number-sign.io</string>
			</array>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.comment</string>
						<string>punctuation.definition.comment.io</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.comment.io</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>variable</string>
				<string>variable.language</string>
				<string>variable.language.io</string>
			</array>
			<key>comment</key>
			<string>I wonder if some of this isn't variable.other.language? --Allan; scoping this as variable.language to match Objective-C's handling of 'self', which is inconsistent with C++'s handling of 'this' but perhaps intentionally so -- Rob</string>
			<key>match</key>
			<string>\b(self|sender|target|proto|protos|parent)\b</string>
			<key>name</key>
			<string>variable.language.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>keyword</string>
				<string>keyword.operator</string>
				<string>keyword.operator.io</string>
			</array>
			<key>match</key>
			<string>&lt;=|&gt;=|=|:=|\*|\||\|\||\+|-|/|&amp;|&amp;&amp;|&gt;|&lt;|\?|@|@@|\b(and|or)\b</string>
			<key>name</key>
			<string>keyword.operator.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>constant</string>
				<string>constant.other</string>
				<string>constant.other.io</string>
			</array>
			<key>match</key>
			<string>\bGL[\w_]+\b</string>
			<key>name</key>
			<string>constant.other.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>support</string>
				<string>support.class</string>
				<string>support.class.io</string>
			</array>
			<key>match</key>
			<string>\b([A-Z](\w+)?)\b</string>
			<key>name</key>
			<string>support.class.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>support</string>
				<string>support.function</string>
				<string>support.function.io</string>
			</array>
			<key>match</key>
			<string>\b(clone|call|init|method|list|vector|block|(\w+(?=\s*\()))\b</string>
			<key>name</key>
			<string>support.function.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>support</string>
				<string>support.function</string>
				<string>support.function.open-gl</string>
				<string>support.function.open-gl.io</string>
			</array>
			<key>match</key>
			<string>\b(gl(u|ut)?[A-Z]\w+)\b</string>
			<key>name</key>
			<string>support.function.open-gl.io</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&quot;&quot;&quot;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.begin</string>
						<string>punctuation.definition.string.begin.io</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.begin.io</string>
				</dict>
			</dict>
			<key>capturableScopes</key>
			<array>
				<string>string</string>
				<string>string.quoted</string>
				<string>string.quoted.triple</string>
				<string>string.quoted.triple.io</string>
			</array>
			<key>end</key>
			<string>&quot;&quot;&quot;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.end</string>
						<string>punctuation.definition.string.end.io</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.end.io</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.triple.io</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>constant</string>
						<string>constant.character</string>
						<string>constant.character.escape</string>
						<string>constant.character.escape.io</string>
					</array>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.io</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&quot;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.begin</string>
						<string>punctuation.definition.string.begin.io</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.begin.io</string>
				</dict>
			</dict>
			<key>capturableScopes</key>
			<array>
				<string>string</string>
				<string>string.quoted</string>
				<string>string.quoted.double</string>
				<string>string.quoted.double.io</string>
			</array>
			<key>end</key>
			<string>&quot;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>punctuation</string>
						<string>punctuation.definition</string>
						<string>punctuation.definition.string</string>
						<string>punctuation.definition.string.end</string>
						<string>punctuation.definition.string.end.io</string>
					</array>
					<key>name</key>
					<string>punctuation.definition.string.end.io</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.io</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>capturableScopes</key>
					<array>
						<string>constant</string>
						<string>constant.character</string>
						<string>constant.character.escape</string>
						<string>constant.character.escape.io</string>
					</array>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.io</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>constant</string>
				<string>constant.numeric</string>
				<string>constant.numeric.io</string>
			</array>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\b</string>
			<key>name</key>
			<string>constant.numeric.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>variable</string>
				<string>variable.other</string>
				<string>variable.other.global</string>
				<string>variable.other.global.io</string>
			</array>
			<key>match</key>
			<string>(Lobby)\b</string>
			<key>name</key>
			<string>variable.other.global.io</string>
		</dict>
		<dict>
			<key>capturableScopes</key>
			<array>
				<string>constant</string>
				<string>constant.language</string>
				<string>constant.language.io</string>
			</array>
			<key>match</key>
			<string>\b(TRUE|true|FALSE|false|NULL|null|Null|Nil|nil|YES|NO)\b</string>
			<key>name</key>
			<string>constant.language.io</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.io</string>
	<key>uuid</key>
	<string>BD798537-3548-47F3-A6AB-7FB95C45DB83</string>
</dict>
</plist>
